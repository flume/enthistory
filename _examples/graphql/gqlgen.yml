# schema tells gqlgen where the GraphQL schema is located.
schema: [graphql/query.graphql]
# doing this to keep gqlgen happy with go workspaces
skip_validation: true
exec:
  filename: graphql/resolver/generated.go
  package: resolver
# resolver reports where the resolver implementations go.
resolver:
  layout: follow-schema
  dir: graphql/resolver
  # gqlgen will search for any type names in the schema in these go packages
  # if they match it will use them, otherwise it will generate them.
  # autobind tells gqngen to search for any type names in the GraphQL schema in the
  # provided package. If they match it will use them, otherwise it will generate new.
model:
  filename: graphql/type_gen.go
  package: graphql
autobind:
  - _examples/graphql/ent
omit_getters: true
# This section declares type mapping between the GraphQL and Go type systems.
models:
  # Defines the ID field as Go 'int'.
  ID:
    model: [_examples/graphql/ent/schema/uuidgql.UUID]
  Node:
    model: [_examples/graphql/ent.Noder]
