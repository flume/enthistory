// Code generated by enthistory, DO NOT EDIT.
package schema

import (
	"entgo.io/ent"
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/schema"
	"entgo.io/ent/schema/field"

	"github.com/flume/enthistory"

	"time"
)

// CharacterHistory holds the schema definition for the CharacterHistory entity.
type CharacterHistory struct {
	ent.Schema
}

// Annotations of the CharacterHistory.
func (CharacterHistory) Annotations() []schema.Annotation {
	return []schema.Annotation{
		entsql.Annotation{
			Table: "character_history",
		},
	}
}

// Fields of the CharacterHistory.
func (CharacterHistory) Fields() []ent.Field {
	historyFields := []ent.Field{
		field.Time("history_time").
			Default(time.Now).
			UpdateDefault(time.Now),
		field.Int("ref").
			Optional(),
		field.String("updated_by").
			Optional().
			Nillable(),
		field.Enum("operation").GoType(enthistory.OpType("")),
	}

	return append(historyFields, Character{}.Fields()...)
}

// Mixin of the CharacterHistory.
func (CharacterHistory) Mixin() []ent.Mixin {
	return Character{}.Mixin()
}
