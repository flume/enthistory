// Code generated by enthistory, DO NOT EDIT.
package schema

import (
	"entgo.io/ent"
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/schema"
	"entgo.io/ent/schema/field"

	"github.com/flume/enthistory"

	"time"
)
{{- $schema := .Schema }}
{{- $name := $schema.Name }}
{{- $fields := $schema.Fields }}

// {{ $name }} holds the schema definition for the {{ $name }} entity.
type {{ $name }} struct {
	ent.Schema
}

// Annotations of the {{ $name }}.
func ({{ $name }}) Annotations() []schema.Annotation {
	return []schema.Annotation{
		entsql.Annotation{
			Table: "{{ .TableName }}",
		},
	}
}

// Fields of the {{ $name }}.
func ({{ $name }}) Fields() []ent.Field {
	historyFields := []ent.Field{
        field.Time("history_time").
            Default(time.Now).
            UpdateDefault(time.Now),
        field.Int("ref").
            Optional(),
		field.{{ $.UpdatedByValueType }}("updated_by").
			Optional().
			Nillable(),
        field.Enum("operation").GoType(enthistory.OpType("")),
    }

    return append(historyFields, {{ .OriginalTableName }}{}.Fields()...)
}

// Mixin of the {{ $name }}.
func ({{ $name }}) Mixin() []ent.Mixin {
	return {{ .OriginalTableName }}{}.Mixin()
}
