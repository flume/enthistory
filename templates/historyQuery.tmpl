{{/* gotype: entgo.io/ent/entc/gen.Graph */}}

{{ define "historyQuery" }}
// Code generated by enthistory, DO NOT EDIT.
	{{- $pkg := base $.Config.Package }}
	{{- template "header" $ }}
import (
    {{- range $n := $.Nodes }}
        {{- $name := $n.Name }}
        {{- $history := hasSuffix $name "History" }}
        {{- if $history }}
        "{{ $.Config.Package }}/{{ lower $n.Name }}"
        {{- end }}
    {{- end }}
)

	{{ range $n := $.Nodes }}
	    {{ $name := $n.Name }}

	    {{ $history := hasSuffix $name "History" }}
	    {{ if $history }}
	    {{ else }}
            {{ range $h := $.Nodes }}
                {{ $sameNodeType := hasPrefix $h.Name (printf "%sHistory" $name) }}
                {{ if $sameNodeType }}
                    {{ $client := print $h.Name "Client" }}
                    func ({{ $n.Receiver }} *{{ $name }}) History() *{{ $h.QueryName }}  {
                        history := (&{{ $client }}{config: {{ $n.Receiver }}.config})
                        return history.Query().Where({{ lower $h.Name }}.Ref({{ $n.Receiver }}.ID))
                    }
                {{ end }}
            {{ end }}
        {{ end }}
	{{ end }}
{{ end }}
