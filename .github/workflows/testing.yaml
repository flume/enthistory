name: Testing

on:
  pull_request:
    paths:
      - "**" # Run on all branches

permissions:
  contents: read

jobs:
  testing:
    name: Testing
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          cache: true
          cache-dependency-path: go.mod
          go-version: "1.25"

      - name: Test
        run: go test ./_examples/.

  linting:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          cache: true
          cache-dependency-path: go.mod
          go-version: "1.25"

      - name: GoLang CI Lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.4
          args: --timeout 10m0s
          skip-cache: true

  formatting:
    name: Formatting
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          cache: true
          cache-dependency-path: go.mod
          go-version: "1.25"

      - name: Format
        run: |
          go install golang.org/x/tools/cmd/goimports@v0.30.0
          UNFORMATTED_CODE_GOFMT=$(goimports -local github.com/flume -d ./)
          if [ -n "$UNFORMATTED_CODE_GOFMT" ]; then
            echo "Code is not formatted. Please run 'make fmt' to fix it."
            echo "$UNFORMATTED_CODE_GOFMT"
            exit 1
          fi
